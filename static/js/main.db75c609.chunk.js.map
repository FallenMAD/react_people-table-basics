{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","api.ts","Pages/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/MainNav/Navigation.tsx","Pages/HomePage.tsx","Pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","to","slug","classNames","sex","name","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","peoples","setPeoples","isloading","setIsLoading","isError","setIsError","useParams","isSelected","findPerson","personName","array","find","loadPeople","peopleData","map","people","mother","motherName","father","fatherName","useEffect","length","born","died","PageNavLink","text","isActive","Navigation","role","HomePage","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.db75c609.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  return (\n    <td>\n      <Link\n        to={`/people/${person.slug}`}\n        className={classNames(\n          person.sex === 'f' ? 'has-text-danger' : '',\n        )}\n      >\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(2000)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { PersonLink } from '../components/PersonLink';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [peoples, setPeoples] = useState<Person[]>([]);\n  const [isloading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { slug = '' } = useParams();\n  const isSelected = (person: Person) => person.slug === slug;\n\n  const findPerson = (personName: string | null, array: Person[]) => {\n    return array.find((person: Person) => person.name === personName);\n  };\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      const peopleData = await getPeople();\n\n      setPeoples(peopleData.map(people => ({\n        ...people,\n        mother: findPerson(people.motherName, peopleData),\n        father: findPerson(people.fatherName, peopleData),\n        motherName: people.motherName || '-',\n        fatherName: people.fatherName || '-',\n      })));\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"box table-container\">\n        {(peoples.length === 0 && !isloading) && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n        {isloading && (\n          <Loader />\n        )}\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n        {peoples.length > 0 && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {peoples.map(person => (\n                <tr\n                  data-cy=\"person\"\n                  key={person.slug}\n                  className={classNames(\n                    { 'has-background-warning': isSelected(person) },\n                  )}\n                >\n                  <td>\n                    <PersonLink\n                      person={person}\n                    />\n                  </td>\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>\n                    {person.mother\n                      ? <PersonLink person={person.mother} />\n                      : person.motherName || '-'}\n                  </td>\n                  <td>\n                    {person.father\n                      ? <PersonLink person={person.father} />\n                      : person.fatherName || '-'}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div>\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <div>\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './Pages';\nimport './App.scss';\nimport { Navigation } from './components/MainNav';\nimport { HomePage } from './Pages/HomePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n\n            <Route path=\"/people\">\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n          </Routes>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}